name: ci-build

on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: "0 2 * * *"

env:
  xuetie_toolchain: https://occ-oss-prod.oss-cn-hangzhou.aliyuncs.com/resource//1695643844189
  toolchain_file_name: Xuantie-900-gcc-linux-5.10.4-glibc-x86_64-V2.6.2-20230916.tar.gz
  rv32_toolchain: https://github.com/riscv-collab/riscv-gnu-toolchain/releases/download/2023.12.20
  rv32_toolchain_file_name: riscv32-glibc-ubuntu-22.04-gcc-nightly-2023.12.20-nightly.tar.gz

jobs:
  kernel:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: zsb-64lp64-xt
            toolchain_tripe: riscv64-unknown-linux-gnu-
          - name: zsb-64lp64
            toolchain_tripe: riscv64-linux-gnu-
          - name: zsb-32ilp32
            toolchain_tripe: riscv32-unknown-linux-gnu-
          - name: linux-32ilp32
            toolchain_tripe: riscv32-unknown-linux-gnu-
          - name: linux-64lp64
            toolchain_tripe: riscv64-linux-gnu-
          - name: opensbi-64lp64
            toolchain_tripe: riscv64-linux-gnu-
          - name: opensbi-32ilp32
            toolchain_tripe: riscv32-unknown-linux-gnu-

    runs-on: ubuntu-22.04
    env:
      CROSS_COMPILE: ${{ matrix.toolchain_tripe }}

    steps:
      - name: Install software
        run: |
              sudo apt update && \
              sudo apt install -y g++-12-riscv64-linux-gnu build-essential
              sudo update-alternatives --install \
                  /usr/bin/riscv64-linux-gnu-gcc riscv64-gcc /usr/bin/riscv64-linux-gnu-gcc-12 10
              sudo update-alternatives --install \
                  /usr/bin/riscv64-linux-gnu-g++ riscv64-g++ /usr/bin/riscv64-linux-gnu-g++-12 10

      - name: Checkout source
        uses: actions/checkout@v4

      - name: Configure toolchains
        run: |
              if [ x"${{ matrix.name }}" = x"zsb-64lp64-xt" ]; then
                wget ${xuetie_toolchain}/${toolchain_file_name}
                tar -xvf ${toolchain_file_name} -C /opt
                rm -v ${toolchain_file_name}
              fi
              if [ x"${{ matrix.name }}" = x"zsb-32ilp32" ]; then
                wget ${rv32_toolchain}/${rv32_toolchain_file_name}
                tar -xvf ${rv32_toolchain_file_name} -C /opt
                rm -v ${rv32_toolchain_file_name}
              fi
              if [ x"${{ matrix.name }}" = x"linux-32ilp32" ]; then
                wget ${rv32_toolchain}/${rv32_toolchain_file_name}
                tar -xvf ${rv32_toolchain_file_name} -C /opt
                rm -v ${rv32_toolchain_file_name}
              fi
              if [ x"${{ matrix.name }}" = x"opensbi-32ilp32" ]; then
                wget ${rv32_toolchain}/${rv32_toolchain_file_name}
                tar -xvf ${rv32_toolchain_file_name} -C /opt
                rm -v ${rv32_toolchain_file_name}
              fi
      - name: Compile
        run: |
              if [ x"${{ matrix.name }}" = x"zsb-64lp64-xt" ]; then
                export PATH="/opt/Xuantie-900-gcc-linux-5.10.4-glibc-x86_64-V2.6.2/bin:$PATH"
                make -j$(nproc)
                tar czvf ${{ matrix.name }}.tar.gz zero_stage_boot.elf
              fi
              if [ x"${{ matrix.name }}" = x"zsb-32ilp32" ]; then
                export PATH="/opt/riscv/bin:$PATH"
                make -j$(nproc)
                tar czvf ${{ matrix.name }}.tar.gz zero_stage_boot.elf
              fi
              if [ x"${{ matrix.name }}" = x"zsb-64lp64" ]; then
                make -j$(nproc)
                tar czvf ${{ matrix.name }}.tar.gz zero_stage_boot.elf
              fi
              if [ x"${{ matrix.name }}" = x"linux-32ilp32" ]; then
                export PATH="/opt/riscv/bin:$PATH"
                git clone https://github.com/T-head-Semi/linux.git -b linux-6.6
                cd linux
                make ARCH=riscv EXTRA_CFLAGS+=-g rv32_defconfig all -j$(nproc)
                mv arch/riscv/boot/Image ..
                mv vmlinux ..
                git log --oneline -500 > ../git.log
                cd -
                tar czvf ${{ matrix.name }}.tar.gz Image vmlinux git.log
              fi
              if [ x"${{ matrix.name }}" = x"linux-64lp64" ]; then
                git clone https://github.com/T-head-Semi/linux.git -b linux-6.6
                cd linux
                make ARCH=riscv EXTRA_CFLAGS+=-g defconfig all -j$(nproc)
                mv arch/riscv/boot/Image ..
                mv vmlinux ..
                git log --oneline -500 > ../git.log
                cd -
                tar czvf ${{ matrix.name }}.tar.gz Image vmlinux git.log
              fi
              if [ x"${{ matrix.name }}" = x"opensbi-64lp64" ]; then
                git clone https://github.com/riscv-software-src/opensbi.git
                cd opensbi
                git checkout dc0bb19bd2f969e8c2b8c55a71b3ae569eedfaf6
                make PLATFORM=generic -j
                mv build/platform/generic/firmware/fw_dynamic.bin ../
                mv build/platform/generic/firmware/fw_dynamic.elf ../
                git log --oneline -500 > ../git.log
                cd -
                tar czvf ${{ matrix.name }}.tar.gz fw_dynamic.elf fw_dynamic.bin
              fi
              if [ x"${{ matrix.name }}" = x"opensbi-32ilp32" ]; then
                export PATH="/opt/riscv/bin:$PATH"
                git clone https://github.com/riscv-software-src/opensbi.git
                cd opensbi
                git checkout dc0bb19bd2f969e8c2b8c55a71b3ae569eedfaf6
                make PLATFORM=generic -j
                mv build/platform/generic/firmware/fw_dynamic.bin ../
                mv build/platform/generic/firmware/fw_dynamic.elf ../
                git log --oneline -500 > ../git.log
                cd -
                tar czvf ${{ matrix.name }}.tar.gz fw_dynamic.elf fw_dynamic.bin
              fi

      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}.tar.gz
          path: ${{ matrix.name }}.tar.gz
          retention-days: 90
